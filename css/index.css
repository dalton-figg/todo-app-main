:root {
  /* primary colors */

  --clr-primary-400: hsl(220, 98%, 61%);
  --clr-primary-500: hsl(280, 87%, 65%);
  --clr-primary-600: hsl(192, 100%, 67%);

  /* neutral colors [ dark mode ] */

  --clr-neutral-100: hsl(0, 0%, 0%);
  --clr-neutral-200: hsl(235, 21%, 11%); /* very dark blue */
  --clr-neutral-300: hsl(235, 24%, 19%); /* very dark desaturated blue */
  --clr-neutral-400: hsl(237, 14%, 26%);
  --clr-neutral-500: hsl(233, 14%, 35%); /* very dark grayish blue */
  --clr-neutral-600: hsl(234, 11%, 52%); /* dark grayish blue */
  --clr-neutral-700: hsl(234, 39%, 85%); /* light grayish blue */
  --clr-neutral-800: hsl(236, 33%, 92%); /* light grayish blue (hover) */
  --clr-neutral-900: hsl(255, 100%, 100%);

  /* typography */

  --fontstack-system: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
    Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  --fontstack-primary: 'Josefin Sans', var(--fontstack-system);
}

/* --- CSS Reset */

/* Remove all the default margin and paddings + use a better box sizing model */

*,
::before,
::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  /* Set up which color schemes can be used on the site */
  color-scheme: dark light;
  /* Normalize font weights on MacOS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeSpeed;
}

body {
  /* Use a more accessible line-height */
  line-height: 1.5;
  /* Set up the main page colors using CSS custom properties (with hsl fallback values) */
  background: var(--clr-neutral-200, hsl(235, 21%, 11%));
  color: var(--clr-neutral-900, white);
  /* Set font family, fallback included in property decleration but an additional one has been provided */
  font-family: var(--fontstack-primary, sans-serif);
}

/* Balance the number of characters on each line (up to 6 lines) to eliminate having a line with only one word */

:where(h1, h2, h3, h4, h5, h6) {
  text-wrap: balance;
}

/* Fix how image elements are treated + use font-style italic so that any alt text is differentiated on the page */

img {
  display: block;
  max-width: 100%;
  font-style: italic;
}

/* Remove any default input typographic styling */

input,
button,
textarea,
select {
  font: inherit;
  /* For this page specifically, I know that I also need to reset the other default styles */
  appearance: none;
  background: none;
  border: none;
  color: var(--clr-neutral-900, white);
}

/* Removing the outline for styling purposes, this may be an accessibility issue on a larger site */

input:focus {
  outline: none;
}

label {
  cursor: pointer;
}

/* Use smooth scrolling only if the user has not selected prefers reduced motion */

@media only screen and (prefers-reduced-motion: no-preference) {
  :has(:target) {
    scroll-behavior: smooth;
  }
}

/* sr-only class from Tailwind to hide an element visually without hiding it from screen readers*/

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* --- Page Styles */

.container {
  --container-width: 550px;
  --container-padding: 4rem;

  /* 
    generates a container similar to a max-width container using the locally scoped custom properties 
    where min(max-width, 100% - total inline padding)
    which will set the width to the minimum value of a hard coded value (replacing the max-width) or 100% of the page width - an amount of padding
    which gets applied on either side (when centered using margin 0 auto)
  */

  width: min(
    var(--container-width),
    calc(100% - calc(var(--container-padding) / 2))
  );
  margin: 10rem auto;

  /* declare as a flex container in order to have consistent gaps between the sections */

  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.heading {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.title {
  /* basic typographic styles for the h1 */
  font-size: 2.5rem;
  letter-spacing: 0.75rem;
  text-transform: uppercase;
}

.form {
  border-radius: 0.375rem;
  background: var(--clr-neutral-300);
}

.form--creation {
  display: flex;
  gap: 0.75rem;
  padding: 1rem;
}

.submit {
  color: var(--clr-neutral-600, hsl(234, 11%, 52%));
}

.task {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1rem;
  font-size: 1.125rem;
}

.submit,
.checkbox {
  --clr-border: hsl(0, 0%, 24%);
  /* Set size to be a perfect square (1:1 ratio) */
  max-width: 25px;
  width: 100%;
  aspect-ratio: 1;
  /* Add border and radius to turn it into a circle */
  border-radius: 50%;
  border: 1px solid var(--clr-border);
  cursor: pointer;
}

/* Add custom checked state with an icon and gradient background */

.checkbox:checked {
  background: url('/images/icon-check.svg'),
    linear-gradient(var(--clr-primary-600), var(--clr-primary-500));
  /* Ensure there is only one checkmark */
  background-repeat: no-repeat;
  /* Position the checkmark */
  background-position: center;
}

/* Add styles to the corresponding label when task is marked as completed */

.checkbox:checked + label {
  text-decoration: line-through;
  opacity: 0.5;
}

.task-divider {
  --clr-border: hsla(234, 39%, 85%, 0.1);
  --divider-width: 95%;

  /* acts as a border-bottom that does not run the full width of the element */
  border-color: var(--clr-border);
  background: var(--clr-border);
  width: var(--divider-width);
  margin: 0 auto;
}

.delete-task {
  cursor: pointer;
  margin-left: auto;
}

.task-details {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem;
  gap: 1rem;
}

@media only screen and (min-width: 640px) {
  .task-details {
    gap: 0;
    flex-direction: row;
  }
}

.task-counter {
  font-size: 1.125rem;
  font-weight: 700;
}

.task-buttons {
  display: flex;
  align-items: center;
  gap: 1rem;
  /* Center the buttons + dictate where the two other items go on the page */
  margin: 0 auto;
}

.task-button {
  color: var(--clr-neutral-600, hsl(234, 11%, 52%));
  font-size: 0.8125rem;
  font-weight: 700;
  cursor: pointer;
}

.task-button--active {
  color: var(--clr-primary-400);
}

.footer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  color: var(--clr-neutral-600, hsl(234, 11%, 52%));
  font-size: 0.875rem;
  text-align: center;
}
